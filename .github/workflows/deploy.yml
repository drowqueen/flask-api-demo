name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'     # Run build and test on push to any branch
  pull_request:
    types: [closed]
    branches:
      - main     # Run deploy only when PR merged into main

jobs:
  build_and_test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies including test packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: |
          pytest -v tests/test_app.py

  deploy:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get remove -y containerd containerd.io
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg
          echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Start SSH agent and add bastion key
        uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible collections and roles
        run: |
          mkdir -p $HOME/.ansible/collections
          export ANSIBLE_GALAXY_COLLECTIONS_PATH=$HOME/.ansible/collections
          ansible-galaxy collection install community.docker
          ansible-galaxy install geerlingguy.docker

      - name: Generate dynamic inventory
        env:
          AWS_REGION: eu-west-1
        run: |
          chmod +x ansible/inventory_script.py
          python3 ansible/inventory_script.py > inventory.yml
          cat inventory.yml

      - name: Run Ansible master playbook on app_servers
        run: ansible-playbook -i inventory.yml ansible/playbooks/site.yml --limit app_servers -v
