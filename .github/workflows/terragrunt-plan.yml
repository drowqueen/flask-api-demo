name: Terragrunt Plan

on:
  push:
    paths:
      - '**/*.tf'
      - '**/*.hcl'
      - '.github/workflows/terragrunt-plan.yml'
      - 'terraform/**/main.tf'
      - 'terraform/**/terragrunt.hcl'
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.hcl'
      - '.github/workflows/terragrunt-plan.yml'
      - 'terraform/**/main.tf'
      - 'terraform/**/terragrunt.hcl'
  workflow_dispatch:

jobs:
  terragrunt-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for accurate git diff

      - uses: ./.github/actions/aws-setup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: ./.github/actions/terragrunt-setup

      - name: Cache Terragrunt cache
        uses: actions/cache@v4
        with:
          path: terraform/.terragrunt-cache
          key: ${{ runner.os }}-terragrunt-${{ hashFiles('terraform/**/*.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terragrunt-

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA=$(git rev-parse HEAD^)
          fi
          echo "Using base SHA: $BASE_SHA"
          git diff --name-only $BASE_SHA HEAD > changed_files.txt
          cat changed_files.txt
          FILES=$(cat changed_files.txt | tr '\n' ' ')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Find changed modules
        id: changed-modules
        run: |
          MODULES=""
          for file in ${{ steps.changed-files.outputs.files }}; do
            if [[ "$file" == terraform/modules/* ]]; then
              mod=$(echo "$file" | cut -d '/' -f3)
              MODULES="$MODULES $mod"
            fi
          done
          MODULES=$(echo $MODULES | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "modules=$MODULES" >> $GITHUB_OUTPUT

      - name: Find live dirs using changed modules
        id: live-dirs-using-modules
        run: |
          USED_DIRS=""
          for mod in ${{ steps.changed-modules.outputs.modules }}; do
            echo "Searching live dirs using module: $mod"
            matches=$(grep -rl "terraform/modules/$mod" terraform/live/*/terragrunt.hcl || true)
            for f in $matches; do
              d=$(dirname "$f")
              USED_DIRS="$USED_DIRS $d"
            done
          done
          USED_DIRS=$(echo $USED_DIRS | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "used_dirs=$USED_DIRS" >> $GITHUB_OUTPUT

      - name: Find changed live dirs with any .tf or .hcl changes
        id: changed-live-dirs
        run: |
          LIVE_DIRS=""
          for file in ${{ steps.changed-files.outputs.files }}; do
            if [[ "$file" == terraform/live/* ]]; then
              d=$(dirname "$file")
              LIVE_DIRS="$LIVE_DIRS $d"
            fi
          done
          LIVE_DIRS=$(echo $LIVE_DIRS | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "live_dirs=$LIVE_DIRS" >> $GITHUB_OUTPUT

      - name: Combine all target dirs for plan
        id: dirs-to-plan
        run: |
          USED="${{ steps.live-dirs-using-modules.outputs.used_dirs }}"
          LIVECHANGED="${{ steps.changed-live-dirs.outputs.live_dirs }}"
          ALL=$(echo "$USED $LIVECHANGED" | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "dirs=$ALL" >> $GITHUB_OUTPUT

      - name: Run terragrunt plan in selected directories
        if: steps.dirs-to-plan.outputs.dirs != ''
        run: |
          IFS=' ' read -r -a dirs <<< "${{ steps.dirs-to-plan.outputs.dirs }}"
          for d in "${dirs[@]}"; do
            echo "==> Running terragrunt plan in $d"
            (cd "$d" && terragrunt init && terragrunt plan)
          done
