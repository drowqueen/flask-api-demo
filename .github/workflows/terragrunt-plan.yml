name: Terragrunt Plan

on:
  push:
    paths:
      - '**/*.tf'
      - '**/*.hcl'
      - '.github/workflows/terragrunt-plan.yml'
      - 'terraform/**/main.tf'
      - 'terraform/**/terragrunt.hcl'
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.hcl'
      - '.github/workflows/terragrunt-plan.yml'
      - 'terraform/**/main.tf'
      - 'terraform/**/terragrunt.hcl'
  workflow_dispatch:

jobs:
  terragrunt-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for accurate git diff

      - uses: ./.github/actions/aws-setup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: ./.github/actions/terragrunt-setup

      - name: Debug cache directory
        run: |
          if [ -d "terraform/.terragrunt-cache" ]; then
            echo "Cache directory terraform/.terragrunt-cache exists:"
            ls -ld terraform/.terragrunt-cache
          else
            echo "Cache directory terraform/.terragrunt-cache not found"
          fi

      - name: Cache Terragrunt cache
        uses: actions/cache@v4
        with:
          path: terraform/.terragrunt-cache
          key: ${{ runner.os }}-terragrunt-${{ hashFiles('terraform/**/*.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terragrunt-

      - name: Find changed terragrunt directories
        id: changed-dirs
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA=$(git rev-parse HEAD^)
          fi

          echo "Using base SHA: $BASE_SHA"

          # Find changed .tf/.hcl files under terraform/
          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" HEAD | grep '^terraform/.*\.\(tf\|hcl\)$' || true)
          DIRS=""
          for file in $CHANGED_FILES; do
            d=$(dirname "$file")
            # Walk up folders until we find a terragrunt.hcl or root terraform dir
            while [ "$d" != "terraform" ] && [ "$d" != "." ]; do
              if [ -f "$d/terragrunt.hcl" ]; then
                DIRS="$DIRS $d"
                break
              fi
              d=$(dirname "$d")
            done
          done

          # Remove duplicates and exclude terraform/live root explicitly (no terragrunt.hcl there)
          DIRS=$(echo "$DIRS" | tr ' ' '\n' | sort -u | grep -v '^terraform/live$' || true)

          echo "dirs=$DIRS" >> "$GITHUB_OUTPUT"

      - name: Debug Terragrunt remote state key
        if: steps.changed-dirs.outputs.dirs != ''
        run: |
          IFS=' ' read -r -a dirs <<< "${{ steps.changed-dirs.outputs.dirs }}"
          for d in "${dirs[@]}"; do
            echo "==== $d ===="
            cd "$d"
            echo "PWD: $(pwd)"
            echo "Terragrunt config path: $(realpath terragrunt.hcl)"
            terragrunt terragrunt-info || true
            cd - > /dev/null
          done

      - name: Terragrunt plan in changed directories
        if: steps.changed-dirs.outputs.dirs != ''
        run: |
          IFS=' ' read -r -a dirs <<< "${{ steps.changed-dirs.outputs.dirs }}"
          for d in "${dirs[@]}"; do
            echo "Running terragrunt plan in $d"
            (cd "$d" && terragrunt init && terragrunt plan)
          done
