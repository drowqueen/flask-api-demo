name: Terragrunt Plan

on:
  push:
    paths:
      - '**/*.tf'
      - '**/*.hcl'
      - '.github/workflows/terragrunt-plan.yml'
      - 'terraform/**/main.tf'
      - 'terraform/**/terragrunt.hcl'
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.hcl'
      - '.github/workflows/terragrunt-plan.yml'
      - 'terraform/**/main.tf'
      - 'terraform/**/terragrunt.hcl'
  workflow_dispatch:

jobs:
  terragrunt-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for accurate git diff

      - uses: ./.github/actions/aws-setup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: ./.github/actions/terragrunt-setup

      - name: Cache Terragrunt cache
        uses: actions/cache@v4
        with:
          path: |
            terraform/.terragrunt-cache
          key: ${{ runner.os }}-terragrunt-${{ hashFiles('terraform/**/*.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terragrunt-

      - name: Find changed terragrunt directories
        id: changed-dirs
        run: |
          # Determine base SHA for diff depending on event type
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA=$(git rev-parse HEAD^)
          fi
          echo "Using base SHA: $BASE_SHA"
          echo "Recent commits:"
          git log --oneline -n 5
          echo "Changed files:"
          git diff --name-only $BASE_SHA HEAD
          CHANGED=$(git diff --name-only $BASE_SHA HEAD | grep '^terraform/' | xargs -n1 dirname | sort -u)
          DIRS=""
          for d in $CHANGED; do
            if [ -f "$d/terragrunt.hcl" ]; then
              DIRS="$DIRS $d"
            fi
          done
          echo "dirs=$DIRS" >> $GITHUB_OUTPUT

      - name: Debug Terragrunt remote state key
        if: steps.changed-dirs.outputs.dirs != ''
        run: |
          set -x
          for d in ${{ steps.changed-dirs.outputs.dirs }}; do
            echo "==== $d ===="
            cd $d
            echo "PWD: $(pwd)"
            echo "Terragrunt config path: $(realpath terragrunt.hcl)"
            terragrunt terragrunt-info || true
            cd -
          done

      - name: Terragrunt plan in changed directories
        if: steps.changed-dirs.outputs.dirs != ''
        run: |
          for d in ${{ steps.changed-dirs.outputs.dirs }}; do
            echo "Running terragrunt plan in $d"
            (cd $d && terragrunt init && terragrunt plan)
          done