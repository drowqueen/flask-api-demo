---
- name: Detect primary outbound interface
  command: ip route get 8.8.8.8
  register: route_info
  changed_when: false # No change expected

- name: Extract interface name from route info
  set_fact:
    outbound_interface: "{{ route_info.stdout.split('dev')[1].split()[0] }}"

- name: Add iptables MASQUERADE rule for outbound traffic if not present
  ansible.builtin.shell: |
    iptables -t nat -C POSTROUTING -o {{ outbound_interface }} -j MASQUERADE 2>/dev/null || \
    iptables -t nat -A POSTROUTING -o {{ outbound_interface }} -j MASQUERADE
  register: iptables_rule_check
  changed_when: iptables_rule_check.rc == 0

- name: Save iptables rules persistently
  ansible.builtin.shell: /sbin/iptables-save
  register: iptables_rules
  changed_when: true

- name: Write iptables rules to /etc/sysconfig/iptables
  ansible.builtin.copy:
    content: "{{ iptables_rules.stdout }}"
    dest: /etc/sysconfig/iptables
    owner: root
    group: root
    mode: "0600"
  when: iptables_rule_check.changed

- name: Create systemd service to restore iptables rules at boot
  ansible.builtin.copy:
    dest: /etc/systemd/system/iptables-restore.service
    content: |
      [Unit]
      Description=Restore iptables rules
      After=network.target

      [Service]
      Type=oneshot
      ExecStart=/sbin/iptables-restore /etc/sysconfig/iptables
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: "0644"

- name: Reload systemd to apply iptables restore service
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start iptables-restore service
  ansible.builtin.systemd:
    name: iptables-restore.service
    enabled: true
    state: started

- name: Ensure IP forwarding is enabled at runtime
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    sysctl_set: true
    reload: yes

- name: Ensure IP forwarding is enabled on boot
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: "^net.ipv4.ip_forward"
    line: "net.ipv4.ip_forward = 1"
